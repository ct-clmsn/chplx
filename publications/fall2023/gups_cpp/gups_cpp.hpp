// This program file was generated by the chplx compiler.
// The original Chapel program file can be found here: gups_cpp.chpl
//
#pragma once

#ifndef __GUPS_CPP_HPP__
#define __GUPS_CPP_HPP__

#include <chplx.hpp>
#include <iostream>
#include <functional>
namespace gups_cpp {
    extern struct __thisModule *__this;

    extern std::int64_t memRatio;


    struct __thisModule {

                auto getNextRandom(std::int64_t x);
                auto computeProblemSize(std::int64_t numArrays,std::int64_t physicalMemoryBytes,std::int64_t memRatio,bool returnLog2);
                auto computeM2Values(chplx::Array<std::int64_t, chplx::Domain<1> > & m2,std::int64_t count);
                auto getNthRandom(std::int64_t N,chplx::Array<std::int64_t, chplx::Domain<1> > & m2,std::int64_t m2count);
                void RAStream(chplx::Array<std::int64_t, chplx::Domain<1> > & vals,std::int64_t numvals,chplx::Array<std::int64_t, chplx::Domain<1> > & m2,std::int64_t m2count);

        static void __construct() { gups_cpp::__this = new __thisModule(); }

        static void __destruct() noexcept {
            auto *m = gups_cpp::__this;
            gups_cpp::__this = nullptr;
            delete m;
        }

        void __main();
    }; // end struct __thisModule

} // end namespace

#endif
