// This program file was generated by the chplx compiler.
// The original Chapel program file can be found here: heat.chpl
//
#include <hpx/hpx_init.hpp>
#include <hpx/program_options.hpp>

#include "heat_driver.hpp"

using namespace heat;

int hpx_main(int argc, char* argv[])
{
    heat::__this->__main();
    return hpx::finalize();
}

int main(int argc, char* argv[])
{
    chplx::registerModule<heat::__thisModule>();
    hpx::program_options::options_description options;
    options.add_options()("ghosts", hpx::program_options::value(&heat::ghosts),
        "config const ghosts : std::int64_t")("k",
        hpx::program_options::value(&heat::k),
        "config const k : double")("dt", hpx::program_options::value(&heat::dt),
        "config const dt : double")("dx",
        hpx::program_options::value(&heat::dx), "config const dx : double")(
        "nx", hpx::program_options::value(&heat::nx),
        "config const nx : std::int64_t")("nt",
        hpx::program_options::value(&heat::nt),
        "config const nt : std::int64_t")("threads",
        hpx::program_options::value(&heat::threads),
        "config const threads : std::int64_t");
    hpx::init_params init_args;
    init_args.desc_cmdline = options;
    return hpx::init(argc, argv, init_args);
}
